#include <testudo/testudo_lc> // default lower-case style
#include "Value.h"
#include "Stack.h"
#include "Operations.h"
#include "Variables.h"

define_top_test_node("pile", // parent full name
                     (stack, // test name
                      "stack")); // title

define_test(stack, // parent
            "pushing and popping") { // title
  declare(using namespace std);
  declare(Stack stack);
  check(stack.length())_equal(0);
  perform(stack.push(make_shared<IntValue>(0)));
  check(stack.length())_equal(1);
  perform(stack.push(make_shared<IntValue>(0)));
  check(stack.length())_equal(2);
  perform(stack.pop());
  check(stack.length())_equal(1);
  perform(stack.pop());
  check(stack.length())_equal(0);
}

define_test(stack, // parent
            "pushing and popping values") { // title
  declare(using namespace std);
  declare(Stack stack);
  perform(stack.push(make_shared<IntValue>(33)));
  perform(stack.push(make_shared<StringValue>("hey")));
  check(dynamic_pointer_cast<StringValue>(stack.pop())->get())_equal("hey");
  check(dynamic_pointer_cast<IntValue>(stack.pop())->get())_equal(33);
}

define_test(stack, // parent
            "popping an empty stack") { // title
  declare(using namespace std);
  declare(Stack stack);
  check_try(stack.pop())_catch();
}

